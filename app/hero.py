from sqlmodel import Field, SQLModel, create_engine, Session


class Hero(SQLModel, table = True):
    id: int | None = Field(default=None, primary_key=True)
    name: str
    secret_name: str
    age: int | None = None

# Create an SQLite database engine
sqlite_file_name = "database.db"
sqlite_url = f"sqlite:///db/{sqlite_file_name}"    # Each supported database has its own URL type. For example, for SQLite it is sqlite:/// followed by the file path. For example: 
                                                # sqlite:///database.db or sqlite:///databases/local/application.db
                                                # When use double // in sqilte:// means the db lives in memory, so it will not be persisted. And gets deleted when the program ends.

engine = create_engine(sqlite_url, echo=True)   #echo=True will log all the SQL statements generated by SQLModel in production is better echo = False

def create_db_and_tables():
    SQLModel.metadata.create_all(engine)            # This will create the database tables based on the defined models if they do not already exist.

# When we declare a model with SQLModel, with the table = True argument, it means that this model will be used to create a table in the database. 
# Because of this, we can use the SQLModel.metadata.create_all(engine) method to create the table in the database.

def create_heroes():
    hero_1 = Hero(name="Deadpond", secret_name="Dive Wilson")
    hero_2 = Hero(name="Spider-Boy", secret_name="Pedro Parqueador")
    hero_3 = Hero(name="Rusty-Man", secret_name="Tommy Sharp", age=48)

    with Session(engine) as session:
        session.add(hero_1)
        session.add(hero_2)
        session.add(hero_3)

        session.commit()  # This will save the changes to the database

    # session.close()  # This will close the session not necessary when using 'with' statement

def main():
    create_db_and_tables()  # This will create the database and tables if they do not exist
    print("Database and tables created successfully.")
    create_heroes()  # This will create some heroes in the database
    print("Heroes created successfully.")

if __name__ == "__main__":
    main()  # This will run the main function when the script is executed